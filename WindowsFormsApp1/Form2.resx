<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>